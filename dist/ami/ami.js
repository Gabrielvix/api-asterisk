"use strict";var _asteriskAmiClient=_interopRequireDefault(require("asterisk-ami-client"));Object.defineProperty(exports,"__esModule",{value:!0}),exports.customAmiClient=void 0,exports.initAmi=initAmi;function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class CustomAmiClient extends _asteriskAmiClient.default{constructor(a){super(a)}_promisable(a,b=6e4){return new Promise((c,d)=>{let e=setTimeout(()=>{d(new Error("Timeout response came."))},b).unref();this._connection.write(a),this._prPendingActions[a.ActionID]=a,this._prEmitter.on(`resp_${a.ActionID}`,a=>{clearTimeout(e),c(a)}).on(`disconnect_${a.ActionID}`,()=>{clearTimeout(e),d(new Error("Client disconnected."))})}).catch(a=>a).then(b=>{if(this._prEmitter.removeAllListeners(`disconnect_${a.ActionID}`),this._prEmitter.removeAllListeners(`resp_${a.ActionID}`),delete this._prPendingActions[a.ActionID],b instanceof Error)throw b;return b})}}const customOptions={econnect:!0,attemptsDelay:2e3,keepAlive:!0,keepAliveDelay:2e3,emitEventsByTypes:!0,eventTypeToLowerCase:!1,emitResponsesById:!0,timeout:6e4},customAmiClient=exports.customAmiClient=new CustomAmiClient(customOptions);async function initAmi(){customAmiClient.connect(process.env.AMI_USER,process.env.AMI_PASSWORD,{host:process.env.AMI_HOST,port:process.env.AMI_PORT}).then(async()=>{console.log(`Ami Rodando na Porta: ${process.env.AMI_PORT}`)}).catch(a=>console.log(a))}